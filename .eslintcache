[{"/run/media/kim/Data/Documents/Prac/weather/src/index.js":"1","/run/media/kim/Data/Documents/Prac/weather/src/app.js":"2","/run/media/kim/Data/Documents/Prac/weather/src/components/forecast.js":"3","/run/media/kim/Data/Documents/Prac/weather/src/components/display.js":"4","/run/media/kim/Data/Documents/Prac/weather/src/components/main.js":"5","/run/media/kim/Data/Documents/Prac/weather/src/components/dashboard.js":"6","/run/media/kim/Data/Documents/Prac/weather/src/components/cityNotFound.js":"7"},{"size":146,"mtime":1614434312287,"results":"8","hashOfConfig":"9"},{"size":545,"mtime":1615396503210,"results":"10","hashOfConfig":"9"},{"size":3254,"mtime":1615458539210,"results":"11","hashOfConfig":"9"},{"size":1062,"mtime":1615395371287,"results":"12","hashOfConfig":"9"},{"size":818,"mtime":1615396272993,"results":"13","hashOfConfig":"9"},{"size":1105,"mtime":1615395205157,"results":"14","hashOfConfig":"9"},{"size":360,"mtime":1615455883610,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"18snqi6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/run/media/kim/Data/Documents/Prac/weather/src/index.js",[],["36","37"],"/run/media/kim/Data/Documents/Prac/weather/src/app.js",["38"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./app.css\";\nimport Forecast from \"./components/forecast\";\n// const Footer = styled.footer`\n//   background-color: rgba(24, 26, 27, 0.2);\n//   // position: fixed;\n//   width: 100%;\n//   height: 40px;\n// `;\n\nconst App = () => {\n  return (\n    <div>\n      <main>\n        <h1>WEATHER APP</h1>\n        <Forecast />\n      </main>\n      {/* <Footer> */}\n      {/*   Page created by <a href=\"##\"> @kimutai</a> */}\n      {/* </Footer> */}\n    </div>\n  );\n};\n\nexport default App;\n","/run/media/kim/Data/Documents/Prac/weather/src/components/forecast.js",["39"],"//using the state hook\nimport react, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Display from \"./display\";\nimport Main from \"./main\";\nimport Dashboard from \"./dashboard\";\nimport CityNotFound from \"./cityNotFound\";\n\nconst Span = styled.div`\n  // display: grid;\n  // grid-template-columns: auto auto;\n  width: 50%;\n  margin: 0 auto;\n`;\n\nconst Input = styled.input`\n  border: none;\n  padding: 6px;\n  border-radius: 5px;\n  font-weight: bold;\n  color: black;\n`;\nconst Button = styled.button`\n  display: inline-block;\n  margin: 10px;\n  background-color: darkcyan;\n  border: none;\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nconst Forecast = () => {\n  const APIKEY = \"7e23a3dc74fc86b89fba3917d84b6ebf\";\n  // const URL =\"api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}\"\n  //react state hook\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState([]);\n\n  //I need to learn about forms and then how apis work\n  //also need to refresh on destructuring and the spread operator\n  //  //the reason I get frustrated is because I code without understanding and I'm too proud and lazy to search\n\n  const handleChange = (e) => {\n    setCity(e.target.value);\n    //why is city != e.target.value?\n  };\n\n  //const handleSubmit = (e) => {\n  //  e.preventDefault();\n  //  console.log(\" submit:\", city);\n  //  fetch(\n  //    //if https is not used, it returns Uncaught (in promise) SyntaxError: Unexpected token < in JSON at position 0\n  //    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${APIKEY}`\n  //  )\n  //    // .then((res) => res.json())\n  //    .then((res) => {\n  //      //log the response error to the console\n  //      if (!res.ok) {\n  //        const message = `${res.status}`;\n  //        throw new Error(message);\n  //      }\n  //      return res.json();\n  //    })\n  //    .then((data) => console.log(data))\n  //    .catch((error) => console.log(error));\n  //  // setWeather(data);\n  //};\n  //\n  //why does the following work and not the other one\n  //I think it's because in the code bellow, we declare variables asum'\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const res = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${APIKEY}`\n    );\n    const data = await res.json();\n    // console.log(data);\n    // setWeather({\n    //   data: data,\n    // });\n    setWeather(data);\n    return data;\n  }\n  console.log(weather);\n  return (\n    <div>\n      <form onSubmit={(e) => handleSubmit(e)}>\n        {/* use onChange for the most part and use onSubmit onlwhen actually submitting the form */}\n        <Input\n          placeholder=\"search city\"\n          required\n          name=\"search\"\n          value={city}\n          onChange={handleChange}\n        />\n        <br />\n        <Button type=\"submit\">Get Forecast</Button>\n      </form>\n      {/* {weather.name !== undefined ? <Display weth={weather} /> : null} */}\n      {weather.name !== undefined && city !== \"\" ? (\n        <Span>\n          <Display weth={weather} />\n          <Main weth={weather} />\n          <Dashboard weth={weather} />\n        </Span>\n      ) : (\n        <CityNotFound />\n      )}\n    </div>\n  );\n};\n\nexport default Forecast;\n","/run/media/kim/Data/Documents/Prac/weather/src/components/display.js",["40"],"import react from \"react\";\nimport styled from \"styled-components\";\n\nconst Div = styled.div``;\nconst Loc = styled.h1`\n  // background-color: blue;\n  // text-align: left;\n  font-size: largest;\n`;\nconst Time = styled.p`\n  // text-align: left;\n  font-size: large;\n`;\n\nconst currentDate = new Date();\nconst days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\nconst date = `${days[currentDate.getDay()]}, ${[currentDate.getDate()]} ${\n  months[currentDate.getMonth()]\n} `;\nconst Display = (props) => {\n  const { weth } = props;\n\n  return (\n    <Div>\n      {/* jhggh */}\n      {/* <span>{`The current weather in ${weth.name}, ${weth.sys.country} is ${weth.main.temp} `}</span> */}\n      <Loc>\n        {weth.name}, {weth.sys.country}\n      </Loc>\n      <Time>{date}</Time>\n      {/* <Main weth={props} /> */}\n    </Div>\n  );\n};\nexport default Display;\n","/run/media/kim/Data/Documents/Prac/weather/src/components/main.js",["41","42"],"// import react from \"react\";\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  display: flex;\n  justify-content: center;\n  background-color: rgba(24, 26, 27, 0.2);\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst Temp = styled.h1`\n  // text-align: right;\n  // font-size: larger;\n`;\n\nconst Desc = styled.div`\n  display: flex;\n  flex-direction: column;\n  div {\n    font-weight: bold;\n  }\n`;\n\nconst Main = (props) => {\n  const { weth } = props;\n\n  const weatherIcon =\n    \"http://openweathermap.org/img/wn/\" + `${weth.weather[0].icon}` + \".png\";\n\n  return (\n    <Div>\n      <Temp>\n        {weth.main.temp} C<sup>o</sup>\n      </Temp>\n      <Desc>\n        <img src={weatherIcon} alt=\"weatherIcon\" />\n        <div>{weth.weather[0].description}</div>\n      </Desc>\n    </Div>\n  );\n};\n\nexport default Main;\n",["43","44"],"/run/media/kim/Data/Documents/Prac/weather/src/components/dashboard.js",[],"/run/media/kim/Data/Documents/Prac/weather/src/components/cityNotFound.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":29,"column":41,"nodeType":"56","messageId":"57","endLine":29,"endColumn":42},{"ruleId":"54","severity":1,"message":"55","line":29,"column":69,"nodeType":"56","messageId":"57","endLine":29,"endColumn":70},{"ruleId":"45","replacedBy":"58"},{"ruleId":"47","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["60"],["61"],"no-global-assign","no-unsafe-negation"]